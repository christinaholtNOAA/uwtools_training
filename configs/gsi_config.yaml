user:
  rrfs_workflow: /scratch3/BMC/wrfruc/cholt/rrfs_work/rrfs-workflow
  uw_training: /scratch3/BMC/wrfruc/uw_training/uwtools_training
  expt_dir: /scratch3/BMC/wrfruc/uw_training/expt_dir
  cycle_freq: !timedelta 1
timevars:
  pyyyymmddhh: '{{ (cycle - user.cycle_freq).strftime("%Y%m%d%H") }}'
  yyyymmddhh: '{{ cycle.strftime("%Y%m%d%H") }}'
  yyyymmdd: '{{ cycle.strftime("%Y%m%d") }}'
  yyyy: '{{ cycle.strftime("%Y") }}'
  mm: '{{ cycle.strftime("%m") }}'
  dd: '{{ cycle.strftime("%d") }}'
  hh: '{{ cycle.strftime("%H") }}'
forecast:
  fv3:
    rundir: "{{ user.expt_dir }}/{{ timevars.pyyyymmddhh }}/fcst"
platform:
  gsi_fixdir: /scratch3/BMC/wrfruc/cholt/rrfs_work/FIX_RRFS/gsi
  crtm_fixdir: /contrib/spack-stack/spack-stack-1.6.0/envs/unified-env-rocky8/install/intel/2021.5.0/crtm-fix-2.4.0.1_emc-zvwtu3t/fix
  obspath: /scratch3/BMC/wrfruc/cholt/rrfs_work/input_data/rap_obs
gsi:
  foo: bar
analysis:
  gsi:
    execution:
      batchargs:
        walltime: "00:50:00"
        cores: 120
        exclusive: true
      executable: '{{ user.rrfs_workflow }}/exec/gsi.x'
      envcmds:
        - module use {{ user.rrfs_workflow }}/modulefiles
        - module load build_hera_intel
        - ulimit -s unlimited
      mpicmd: srun
      stacksize: 300M
      threads: 1
    coupler.res:
      template_file: '{{ platform.gsi_fixdir }}/RRFS_CONUS_13km/fv3_coupler.res'
      template_values:
        yyyy: "{{ timevars.yyyy }}"
        mm: "{{ timevars.mm }}"
        dd: "{{ timevars.dd }}"
        hh: "{{ timevars.hh }}"
        crh: "{{ gsi.foo }}"
    files_to_copy:
      anavinfo: "{{ platform.gsi_fixdir }}/anavinfo.rrfs_conv_dbz"
      berror_stats: "{{ platform.gsi_fixdir }}/rrfs_glb_berror.l127y770.f77"
      satinfo: "{{ platform.gsi_fixdir }}/global_satinfo.txt"
      convinfo: "{{ platform.gsi_fixdir }}/convinfo.rrfs"
      ozinfo: "{{ platform.gsi_fixdir }}/global_ozinfo.txt"
      pcpinfo: "{{ platform.gsi_fixdir }}/global_pcpinfo.txt"
      errtable: "{{ platform.gsi_fixdir }}/errtable.rrfs"
      atms_beamwidth.txt: "{{ platform.gsi_fixdir }}/atms_beamwidth.txt"
    files_to_link:
      fv3_akbk: "{{ platform.gsi_fixdir }}/RRFS_CONUS_13km/fv3_akbk"
      fv3_grid_spec: "{{ platform.gsi_fixdir }}/RRFS_CONUS_13km/fv3_grid_spec"
      fv3_dynvars: "{{ forecast.fv3.rundir }}/RESTART/{{ timevars.yyyymmdd }}.{{ timevars.hh }}0000.fv_core.res.tile1.nc"
      fv3_tracer: "{{ forecast.fv3.rundir }}/RESTART/{{ timevars.yyyymmdd }}.{{ timevars.hh }}0000.fv_tracer.res.tile1.nc"
      fv3_sfcdata: "{{ forecast.fv3.rundir }}/RESTART/{{ timevars.yyyymmdd }}.{{ timevars.hh }}0000.sfc_data.nc"
      fv3_phyvars: "{{ forecast.fv3.rundir }}/RESTART/{{ timevars.yyyymmdd }}.{{ timevars.hh }}0000.phy_data.nc"
      crtm_coeffs/Nalli.IRwater.EmisCoeff.bin: "{{ platform.crtm_fixdir }}/Nalli.IRwater.EmisCoeff.bin"
      crtm_coeffs/NPOESS.IRice.EmisCoeff.bin: "{{ platform.crtm_fixdir }}/NPOESS.IRice.EmisCoeff.bin"
      crtm_coeffs/NPOESS.IRsnow.EmisCoeff.bin: "{{ platform.crtm_fixdir }}/NPOESS.IRsnow.EmisCoeff.bin"
      crtm_coeffs/NPOESS.IRland.EmisCoeff.bin: "{{ platform.crtm_fixdir }}/NPOESS.IRland.EmisCoeff.bin"
      crtm_coeffs/NPOESS.VISice.EmisCoeff.bin: "{{ platform.crtm_fixdir }}/NPOESS.VISice.EmisCoeff.bin"
      crtm_coeffs/NPOESS.VISland.EmisCoeff.bin: "{{ platform.crtm_fixdir }}/NPOESS.VISland.EmisCoeff.bin"
      crtm_coeffs/NPOESS.VISsnow.EmisCoeff.bin: "{{ platform.crtm_fixdir }}/NPOESS.VISsnow.EmisCoeff.bin"
      crtm_coeffs/NPOESS.VISwater.EmisCoeff.bin: "{{ platform.crtm_fixdir }}/NPOESS.VISwater.EmisCoeff.bin"
      crtm_coeffs/FASTEM6.MWwater.EmisCoeff.bin: "{{ platform.crtm_fixdir }}/FASTEM6.MWwater.EmisCoeff.bin"
      crtm_coeffs/AerosolCoeff.bin: "{{ platform.crtm_fixdir }}/AerosolCoeff.bin"
      crtm_coeffs/CloudCoeff.bin: "{{ platform.crtm_fixdir }}/CloudCoeff.bin"
      crtm_coeffs/<tau>: !glob "{{ platform.crtm_fixdir }}/*TauCoeff.bin"
      crtm_coeffs/<spc>: !glob "{{ platform.crtm_fixdir }}/*SpcCoeff.bin"
      prepbufr: "{{ platform.obspath }}/{{ timevars.yyyymmddhh }}.rap.t{{ timevars.hh }}z.prepbufr.tm00"
      satwndbufr: "{{ platform.obspath }}/{{ timevars.yyyymmddhh }}.rap.t{{ timevars.hh }}z.satwnd.tm00.bufr_d"
      l2rwbufr: "{{ platform.obspath }}/{{ timevars.yyyymmddhh }}.rap.t{{ timevars.hh }}z.nexrad.tm00.bufr_d"
      amsuabufr: "{{ platform.obspath }}/{{ timevars.yyyymmddhh }}.rap.t{{ timevars.hh }}z.1bamua.tm00.bufr_d"
      amsuabufrears: "{{ platform.obspath }}/{{ timevars.yyyymmddhh }}.rap.t{{ timevars.hh }}z.esamua.tm00.bufr_d"
      mhsbufr: "{{ platform.obspath }}/{{ timevars.yyyymmddhh }}.rap.t{{ timevars.hh }}z.1bmhs.tm00.bufr_d"
      mhsbufrears: "{{ platform.obspath }}/{{ timevars.yyyymmddhh }}.rap.t{{ timevars.hh }}z.esmhs.tm00.bufr_d"
      atmsbufr: "{{ platform.obspath }}/{{ timevars.yyyymmddhh }}.rap.t{{ timevars.hh }}z.atms.tm00.bufr_d"
      atmsbufrears: "{{ platform.obspath }}/{{ timevars.yyyymmddhh }}.rap.t{{ timevars.hh }}z.esatms.tm00.bufr_d"
      atmsbufr_db: "{{ platform.obspath }}/{{ timevars.yyyymmddhh }}.rap.t{{ timevars.hh }}z.atmsdb.tm00.bufr_d"
      crisfsbufr: "{{ platform.obspath }}/{{ timevars.yyyymmddhh }}.rap.t{{ timevars.hh }}z.crisf4.tm00.bufr_d"
      crisfsbufr_db: "{{ platform.obspath }}/{{ timevars.yyyymmddhh }}.rap.t{{ timevars.hh }}z.crsfdb.tm00.bufr_d"
      iasibufr: "{{ platform.obspath }}/{{ timevars.yyyymmddhh }}.rap.t{{ timevars.hh }}z.mtiasi.tm00.bufr_d"
      iasibufrears: "{{ platform.obspath }}/{{ timevars.yyyymmddhh }}.rap.t{{ timevars.hh }}z.esiasi.tm00.bufr_d"
      iasibufr_db: "{{ platform.obspath }}/{{ timevars.yyyymmddhh }}.rap.t{{ timevars.hh }}z.iasidb.tm00.bufr_d"
      abibufr: "{{ platform.obspath }}/{{ timevars.yyyymmddhh }}.rap.t{{ timevars.hh }}z.gsrcsr.tm00.bufr_d"
      ssmisbufr: "{{ platform.obspath }}/{{ timevars.yyyymmddhh }}.rap.t{{ timevars.hh }}z.ssmisu.tm00.bufr_d"
    namelist:
      base_file: "{{ user.uw_training }}/parm/gsiparm.anl"
    obs_input_file: "{{ user.uw_training }}/parm/obs_input.txt"
    rundir: "{{ user.expt_dir }}/{{ timevars.yyyymmddhh }}/analysis"
  platform:
    scheduler: slurm
    account: wrfruc
